[{"/Users/park/Flatiron/after/covid_19_tracker/src/index.js":"1","/Users/park/Flatiron/after/covid_19_tracker/src/App.js":"2","/Users/park/Flatiron/after/covid_19_tracker/src/reportWebVitals.js":"3","/Users/park/Flatiron/after/covid_19_tracker/src/components/Header.js":"4","/Users/park/Flatiron/after/covid_19_tracker/src/components/Contents.js":"5"},{"size":500,"mtime":1607316621823,"results":"6","hashOfConfig":"7"},{"size":267,"mtime":1607319043716,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607316621824,"results":"9","hashOfConfig":"7"},{"size":186,"mtime":1607410872919,"results":"10","hashOfConfig":"7"},{"size":3433,"mtime":1607410346635,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"laycrq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"/Users/park/Flatiron/after/covid_19_tracker/src/index.js",[],["26","27"],"/Users/park/Flatiron/after/covid_19_tracker/src/App.js",["28"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Contents from './components/Contents';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header />\n     <Contents />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/park/Flatiron/after/covid_19_tracker/src/reportWebVitals.js",[],"/Users/park/Flatiron/after/covid_19_tracker/src/components/Header.js",[],"/Users/park/Flatiron/after/covid_19_tracker/src/components/Contents.js",["29","30","31"],"import { useState, useEffect } from 'react';\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\nimport axios from 'axios'\n\nconst Contents = () => {\n\n  const [confirmedData, setConfirmedData] = useState({})\n  const [quarantinedData, setQuarantinedData] = useState({})\n  const [comparedData, setComparedData] = useState({})\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n        const res = await axios.get(\"https://api.covid19api.com/total/dayone/country/US\")\n        makeData(res.data)\n    }\n    const makeData = (items) => {\n      const arr = items.reduce((acc, cur) => {\n        const currentDate = new Date(cur.Date);\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth();\n        const date = currentDate.getDate();\n        const confirmed = cur.Confirmed;\n        const active = cur.Active;\n        const death = cur.Deaths;\n        const recovered = cur.Recovered;\n\n        const findItem = acc.find(a => a.year === year && a.month === month)\n        \n        if(!findItem) {\n          acc.push({year, month, date, confirmed, active, death, recovered})\n        }\n        if(findItem && findItem.date < date) {\n          findItem.active = active;\n          findItem.death = death;\n          findItem.date = date;\n          findItem.year = year;\n          findItem.month = month;\n          findItem.recovered = recovered;\n          findItem.confirmed = confirmed;\n        }\n        return acc;\n      }, [])\n      console.log(arr)\n\n      const labels = arr.map(a => `${a.month+1}`)\n      setConfirmedData({\n        labels,\n        datasets: [\n          { \n            label: \"Cases\",\n            backgroundColor: \"salmon\",\n            fill: true,\n            data: arr.map(a => a.confirmed)\n          }\n        ]\n      })\n      setQuarantinedData({\n        labels,\n        datasets: [\n          { \n            label: \"Quarantined\",\n            borderColor: \"salmon\",\n            fill: false,\n            data: arr.map(a => a.active)\n          }\n        ]\n      })\n\n      const last = arr[arr.length-1]\n      setComparedData({\n        labels: [\"Confimed\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          { \n            label: \"Cases, Recovered, Deaths\",\n            backgroundColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\n            borderColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\n            fill: false,\n            data: [last.confirmed, last.recovered, last.death]\n          }\n        ]\n      })\n    }\n    fetchEvents()\n  }, [])\n  return (\n    <section>\n       <h2>COVID-19 Cases</h2>\n       <div className=\"contents\">\n          <div>\n            <Bar data={confirmedData} options={\n              { title: { display: true, text: \"누적 확진자 추이\", fontSize: 16}},\n              { legend: { display: true, position: \"bottom\"}}\n            } />\n          </div>\n          <div>\n            <Line data={quarantinedData} options={\n              { title: { display: true, text: \"월별 격리자 현황\", fontSize: 16}},\n              { legend: { display: true, position: \"bottom\"}}\n            } />\n          </div>\n          <div>\n            <Doughnut data={comparedData} options={\n              { title: { display: true, text: `누적 확진, 해제, 사망 (${new Date().getMonth()+1})`, fontSize: 16}},\n              { legend: { display: true, position: \"bottom\"}}\n            } />\n          </div>\n       </div>\n     </section>\n  )\n}\n\nexport default Contents\n",["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"43","line":91,"column":74,"nodeType":"44","messageId":"45","endLine":91,"endColumn":75},{"ruleId":"42","severity":1,"message":"43","line":97,"column":74,"nodeType":"44","messageId":"45","endLine":97,"endColumn":75},{"ruleId":"42","severity":1,"message":"43","line":103,"column":107,"nodeType":"44","messageId":"45","endLine":103,"endColumn":108},{"ruleId":"34","replacedBy":"46"},{"ruleId":"36","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["48"],["49"],"no-global-assign","no-unsafe-negation"]
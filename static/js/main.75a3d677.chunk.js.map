{"version":3,"sources":["components/Header.js","logo.svg","components/Contents.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Contents","useState","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","useEffect","fetchEvents","a","axios","get","res","makeData","data","items","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","console","log","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","options","legend","display","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75a3d677.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n       <h1>COVID-19</h1>\n          United States\n     </header>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react';\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\nimport axios from 'axios'\n\nconst Contents = () => {\n\n  const [confirmedData, setConfirmedData] = useState({})\n  const [quarantinedData, setQuarantinedData] = useState({})\n  const [comparedData, setComparedData] = useState({})\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n        const res = await axios.get(\"https://api.covid19api.com/total/dayone/country/US\")\n        makeData(res.data)\n    }\n    const makeData = (items) => {\n      const arr = items.reduce((acc, cur) => {\n        const currentDate = new Date(cur.Date);\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth();\n        const date = currentDate.getDate();\n        const confirmed = cur.Confirmed;\n        const active = cur.Active;\n        const death = cur.Deaths;\n        const recovered = cur.Recovered;\n\n        const findItem = acc.find(a => a.year === year && a.month === month)\n        \n        if(!findItem) {\n          acc.push({year, month, date, confirmed, active, death, recovered})\n        }\n        if(findItem && findItem.date < date) {\n          findItem.active = active;\n          findItem.death = death;\n          findItem.date = date;\n          findItem.year = year;\n          findItem.month = month;\n          findItem.recovered = recovered;\n          findItem.confirmed = confirmed;\n        }\n        return acc;\n      }, [])\n      console.log(arr)\n\n      const labels = arr.map(a => `${a.month+1}`)\n      setConfirmedData({\n        labels,\n        datasets: [\n          { \n            label: \"Cases\",\n            backgroundColor: \"salmon\",\n            fill: true,\n            data: arr.map(a => a.confirmed)\n          }\n        ]\n      })\n      setQuarantinedData({\n        labels,\n        datasets: [\n          { \n            label: \"Quarantined\",\n            borderColor: \"salmon\",\n            fill: false,\n            data: arr.map(a => a.active)\n          }\n        ]\n      })\n\n      const last = arr[arr.length-1]\n      setComparedData({\n        labels: [\"Confimed\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          { \n            label: \"Cases, Recovered, Deaths\",\n            backgroundColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\n            borderColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\n            fill: false,\n            data: [last.confirmed, last.recovered, last.death]\n          }\n        ]\n      })\n    }\n    fetchEvents()\n  }, [])\n  return (\n    <section>\n       <h2>COVID-19 Cases</h2>\n       <div className=\"contents\">\n          <div>\n            <Bar data={confirmedData} options={\n              { title: { display: true, text: \"누적 확진자 추이\", fontSize: 16}},\n              { legend: { display: true, position: \"bottom\"}}\n            } />\n          </div>\n          <div>\n            <Line data={quarantinedData} options={\n              { title: { display: true, text: \"월별 격리자 현황\", fontSize: 16}},\n              { legend: { display: true, position: \"bottom\"}}\n            } />\n          </div>\n          <div>\n            <Doughnut data={comparedData} options={\n              { title: { display: true, text: `누적 확진, 해제, 사망 (${new Date().getMonth()+1})`, fontSize: 16}},\n              { legend: { display: true, position: \"bottom\"}}\n            } />\n          </div>\n       </div>\n     </section>\n  )\n}\n\nexport default Contents\n","import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Contents from './components/Contents';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header />\n     <Contents />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}